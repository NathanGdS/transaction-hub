Descrição do Projeto:

Desenvolver um sistema que simula o processamento de transações financeiras através de uma API. O sistema deve permitir o envio de dados de pagamento e registrar transações em um banco de dados, e  através de um segundo microserviço, simular o processamento  dessas transações.

Funcionalidades:
O sistema deverá ser composto por dois serviços onde:

1. API de Recebimento de Transações

O primeiro serviço deve expor uma API com  um endpoint para receber dados de pagamento. O payload de entrada deve conter os seguintes campos:

amount: (float) Valor da transação.
paymentMethod: (string) Método de pagamento, podendo ser PIX ou CREDIT_CARD.
currencyCode: (string) Código da moeda (ex: "BRL", "USD").
description: (string) Descrição da transação.
2. Registro de Transações

Ao receber os dados, o sistema deve:

Criar um objeto transaction no banco de dados com os dados recebidos, este objeto além de todos os dados recebidos na API deverá ter um campo chamado status que pode ter os valores PENDING e FINISHED.
Atribuir um status PENDING à transação.
Gerar um identificador único (UUID) para cada transação.
3. Envio para Fila Kafka

Após registrar a transação no banco, o sistema deve enviar a transação para um tópico do Kafka.

4. Resposta da API

A resposta da API deve:

Retornar o código HTTP 201 (Created).
Incluir no corpo da resposta o UUID da transação gerada.
 

5. Microserviço de Processamento

Um segundo microserviço deve:

Ler a fila do Kafka.
Simular o processamento da transação, ou seja, aqui use a sua criatividade, pode simular por exemplo uma chamada a uma API externa ou até mesmo postar em um banco de dados em memória. Em seguida após simular o processamento da transação o serviço deve atualizar o status da transação no banco de dados para FINISHED.

O prazo de entrega é em 06/05/25
Fique à vontade para escolher as tecnologias que mais você se sentir confortável.
Fique à vontade para incluir melhorias ou novas funcionalidades no sistema.