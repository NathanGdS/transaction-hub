version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - internal

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092,DOCKER://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092,DOCKER://0.0.0.0:9094
    networks:
      - internal
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transaction
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  transaction-ledger:
    build:
      context: .
      dockerfile: transaction-ledger/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      KAFKA_BROKERS: host.docker.internal:9094
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: transaction
      DB_PORT: 5432
    restart: unless-stopped
    networks:
      - internal

  transaction-processment:
    build:
      context: .
      dockerfile: transaction-processment/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
      transaction-ledger:
        condition: service_started
    environment:
      KAFKA_BROKERS: host.docker.internal:9094
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: transaction
      DB_PORT: 5432
    restart: unless-stopped
    networks:
      - internal

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
    networks:
      - internal

volumes:
  postgres_data:

networks:
  internal:
    name: internal-network
    driver: bridge
